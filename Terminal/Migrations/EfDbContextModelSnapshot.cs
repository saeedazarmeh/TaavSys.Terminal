// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Terminal.Persistant;

#nullable disable

namespace Terminal.Migrations
{
    [DbContext(typeof(EfDbContext))]
    partial class EfDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Terminal.Entity.Bus.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VarChar(30)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buses", "Bus");
                });

            modelBuilder.Entity("Terminal.Entity.Log.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Catched")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Refunds")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Terminal.Entity.Passenger.Passenger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VarChar(30)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("Char(11)");

                    b.HasKey("Id");

                    b.ToTable("Passengers", "Passenger");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeatType")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.ToTable("Seats", "Trip");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PassengerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Payment")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PassengerId");

                    b.HasIndex("TripId");

                    b.ToTable("Tickets", "Trip");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusId")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerSeet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("TripDiscrimination")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.ToTable("Trips", "Trip");

                    b.HasDiscriminator<int>("TripDiscrimination");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.NormalTrip", b =>
                {
                    b.HasBaseType("Terminal.Entity.Trip.Trip");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Terminal.Entity.Trip.VIPTrip", b =>
                {
                    b.HasBaseType("Terminal.Entity.Trip.Trip");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Seat", b =>
                {
                    b.HasOne("Terminal.Entity.Trip.Ticket", "Ticket")
                        .WithMany("Seats")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Ticket", b =>
                {
                    b.HasOne("Terminal.Entity.Passenger.Passenger", "Passenger")
                        .WithMany("Tickets")
                        .HasForeignKey("PassengerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Terminal.Entity.Trip.Trip", "Trip")
                        .WithMany("Tickets")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Passenger");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Trip", b =>
                {
                    b.HasOne("Terminal.Entity.Bus.Bus", "Bus")
                        .WithMany("Trips")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Terminal.Entity.Trip.ValueObject.Route", "Route", b1 =>
                        {
                            b1.Property<int>("TripId")
                                .HasColumnType("int");

                            b1.Property<string>("Destination")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Origin")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("TripId");

                            b1.ToTable("Trips", "Trip");

                            b1.WithOwner()
                                .HasForeignKey("TripId");
                        });

                    b.Navigation("Bus");

                    b.Navigation("Route")
                        .IsRequired();
                });

            modelBuilder.Entity("Terminal.Entity.Bus.Bus", b =>
                {
                    b.Navigation("Trips");
                });

            modelBuilder.Entity("Terminal.Entity.Passenger.Passenger", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Ticket", b =>
                {
                    b.Navigation("Seats");
                });

            modelBuilder.Entity("Terminal.Entity.Trip.Trip", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
